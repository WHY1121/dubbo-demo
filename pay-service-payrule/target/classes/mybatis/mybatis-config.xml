<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 2009-2012 The MyBatis Team Licensed under the Apache License, 
	Version 2.0 (the "License"); you may not use this file except in compliance 
	with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. -->
<!DOCTYPE configuration
    PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-config.dtd">

<configuration>

	<!-- 引用系统全局配置文件 -->
	<properties resource="public_system.properties" />

	<settings>
		<!-- 这个配置使全局的映射器启用或禁用 缓存 -->
		<setting name="cacheEnabled" value="true" />
		<!-- 全局启用或禁用延迟加载。当禁用时, 所有关联对象都会即时加载 -->
		<setting name="lazyLoadingEnabled" value="true" />
		<!-- 允许或不允许多种结果集从一个单独 的语句中返回(需要适合的驱动) -->
		<setting name="multipleResultSetsEnabled" value="true" />
		<!-- 使用列标签代替列名。 不同的驱动在这 方便表现不同。 参考驱动文档或充分测 试两种方法来决定所使用的驱动 -->
		<setting name="useColumnLabel" value="true" />
		<!-- 允许 JDBC 支持生成的键。 需要适合的 驱动。 如果设置为 true 则这个设置强制 生成的键被使用, 尽管一些驱动拒绝兼 容但仍然有效(比如 
			Derby) -->
		<setting name="useGeneratedKeys" value="false" />
		<!-- 配置默认的执行器。SIMPLE 执行器没 有什么特别之处。REUSE 执行器重用 预处理语句。BATCH 执行器重用语句 和批量更新 -->
		<setting name="defaultExecutorType" value="SIMPLE" />
		<!-- 设置超时时间, 它决定驱动等待一个数 据库响应的时间 -->
		<setting name="defaultStatementTimeout" value="100" />
		<setting name="safeRowBoundsEnabled" value="false" />
		<setting name="mapUnderscoreToCamelCase" value="false" />
		<setting name="localCacheScope" value="SESSION" />
		<setting name="jdbcTypeForNull" value="OTHER" />
		<setting name="aggressiveLazyLoading" value="true" />
		<setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString" />
		<!-- 设置超时时间，它决定驱动等待一个数据库响应的时间。 -->
		<setting name="defaultStatementTimeout" value="25000" />
	</settings>

	<!-- 类型别名是为 Java类型命名一个短的名字。 它只和 XML配置有关,只用来减少类完全 限定名的多余部分 -->
	<typeAliases>
		<!-- rule:支付规则模块实体别名 -->
		<typeAlias alias="Frp" type="wusc.edu.pay.facade.payrule.entity.Frp" />
		<typeAlias alias="BankBranch" type="wusc.edu.pay.facade.payrule.entity.BankBranch" />
		<typeAlias alias="PayProduct" type="wusc.edu.pay.facade.payrule.entity.PayProduct" />
		<typeAlias alias="PayProductSwitch"
			type="wusc.edu.pay.facade.payrule.entity.PayProductSwitch" />
		<typeAlias alias="PayRule" type="wusc.edu.pay.facade.payrule.entity.PayRule" />
		<typeAlias alias="PayWay" type="wusc.edu.pay.facade.payrule.entity.PayWay" />
		<typeAlias alias="PayWayPauseNotice"
			type="wusc.edu.pay.facade.payrule.entity.PayWayPauseNotice" />
		<typeAlias alias="PayWaySwitch" type="wusc.edu.pay.facade.payrule.entity.PayWaySwitch" />
		<typeAlias alias="UserPayRuleSetting"
			type="wusc.edu.pay.facade.payrule.entity.UserPayRuleSetting" />

	</typeAliases>

	<!-- 在在mappers定义之前 -->
	<typeHandlers>
		<typeHandler javaType="Boolean" jdbcType="SMALLINT"
			handler="wusc.edu.pay.common.core.mybatis.BooleanTypeHandler" />
	</typeHandlers>

	<!-- 数据库适配器 -->
	<plugins>
		<plugin interceptor="wusc.edu.pay.common.core.mybatis.interceptor.ExecutorInterceptor">
			<property name="dialectClass" value="${dialectClass}" />
		</plugin>
	</plugins>

	<mappers>
		<!-- rule:支付规则模块实体映射文件 -->
		<mapper resource="mybatis/mapper/BankBranch.Mapper.xml" />
		<mapper resource="mybatis/mapper/Frp.Mapper.xml" />
		<mapper resource="mybatis/mapper/PayProduct.Mapper.xml" />
		<mapper resource="mybatis/mapper/PayProductSwitch.Mapper.xml" />
		<mapper resource="mybatis/mapper/PayRule.Mapper.xml" />
		<mapper resource="mybatis/mapper/PayWay.Mapper.xml" />
		<mapper resource="mybatis/mapper/PayWayPauseNotice.Mapper.xml" />
		<mapper resource="mybatis/mapper/PayWaySwitch.Mapper.xml" />
		<mapper resource="mybatis/mapper/UserPayRuleSetting.Mapper.xml" />
	</mappers>

</configuration>