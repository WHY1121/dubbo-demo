<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="wusc.edu.pay.core.settlement.dao.impl.SettDailyCollectDaoImpl">

	<sql id="table"> TBL_SETT_DAILY_COLLECT </sql>

	<resultMap id="BaseResultMap"
		type="wusc.edu.pay.facade.settlement.entity.SettDailyCollect">
		<id column="ID" property="id" jdbcType="BIGINT" />
		<result column="VERSION" property="version" jdbcType="INTEGER" />
		<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
		<result column="ACCOUNT_NO" property="accountNo" jdbcType="VARCHAR" />
		<result column="COLLECT_DATE" property="collectDate" jdbcType="DATE" />
		<result column="COLLECT_TYPE" property="collectType" jdbcType="SMALLINT" />
		<result column="BATCH_NO" property="batchNo" jdbcType="VARCHAR" />
		<result column="TOTAL_AMOUNT" property="totalAmount" jdbcType="DECIMAL" />
		<result column="TOTAL_COUNT" property="totalCount" jdbcType="INTEGER" />
		<result column="SETT_STATUS" property="settStatus" jdbcType="SMALLINT" />
		<result column="REMARK" property="remark" jdbcType="VARCHAR" />
		<result column="RISK_DAY" property="riskDay" jdbcType="INTEGER" />
		
		<!-- 用作显示， -->
		<result column="USER_NO" property="userNo" jdbcType="VARCHAR" />
		<result column="REAL_NAME" property="realName" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="Base_Column_List">
		a.ID, a.VERSION, a.CREATE_TIME, a.ACCOUNT_NO, a.COLLECT_DATE,
		a.COLLECT_TYPE, a.BATCH_NO, a.TOTAL_AMOUNT,
		a.TOTAL_COUNT, a.SETT_STATUS, a.REMARK,a.RISK_DAY
	</sql>

	<sql id="condition_sql">
		<if test="accountNo != null and accountNo != ''"> and a.ACCOUNT_NO = #{accountNo,jdbcType=VARCHAR}</if>
		<if test="batchNo != null and batchNo != ''"> and a.BATCH_NO = #{batchNo,jdbcType=VARCHAR}</if>
		<if test="settStatus != null and settStatus != ''"> and a.SETT_STATUS = #{settStatus,jdbcType=SMALLINT}</if>
		
		<if test="startCollectDate != null and startCollectDate !=''">
			<![CDATA[ and a.COLLECT_DATE >= CONCAT(#{startCollectDate},' 00:00:00')]]>
		</if>
		<if test="endCollectDate != null and endCollectDate !=''">
			<![CDATA[ and a.COLLECT_DATE <= CONCAT(#{endCollectDate},' 23:59:59')]]>
		</if>
		<if test="beginDate != null and beginDate != '' and endDate != null and endDate !=''">
			and a.CREATE_TIME between #{beginDate} AND CONCAT(#{endDate},' 23:59:59')
		</if>
		<!-- 用户编号 -->
		<if test="userNo != null and userNo != ''"> and b.USERNO = #{userNo}</if>
		<if test="realName != null and realName != ''"> and b.REALNAME like CONCAT('%', CONCAT(#{realName}, '%')) </if>
	</sql>

	<insert id="insert" keyProperty="id" useGeneratedKeys="true" parameterType="wusc.edu.pay.facade.settlement.entity.SettDailyCollect">
		insert into
		<include refid="table" />
		(VERSION, CREATE_TIME,
		ACCOUNT_NO, COLLECT_DATE, COLLECT_TYPE,
		BATCH_NO, TOTAL_AMOUNT,
		TOTAL_COUNT, SETT_STATUS, REMARK,RISK_DAY
		)
		values (0,
		#{createTime},
		#{accountNo,jdbcType=VARCHAR},
		#{collectDate,jdbcType=DATE}, #{collectType,jdbcType=SMALLINT},
		#{batchNo,jdbcType=VARCHAR}, #{totalAmount,jdbcType=DECIMAL},
		#{totalCount,jdbcType=INTEGER}, #{settStatus,jdbcType=SMALLINT},
		#{remark,jdbcType=VARCHAR},
		#{riskDay,jdbcType=INTEGER}
		)
	</insert>

	<update id="update" parameterType="wusc.edu.pay.facade.settlement.entity.SettDailyCollect">
		update
		<include refid="table" />
		set VERSION = #{version,jdbcType=INTEGER} + 1,
		COLLECT_DATE =
		#{collectDate,jdbcType=DATE},
		COLLECT_TYPE =
		#{collectType,jdbcType=SMALLINT},
		BATCH_NO =
		#{batchNo,jdbcType=VARCHAR},
		TOTAL_AMOUNT =
		#{totalAmount,jdbcType=DECIMAL},
		TOTAL_COUNT =
		#{totalCount,jdbcType=INTEGER},
		SETT_STATUS =
		#{settStatus,jdbcType=SMALLINT},
		REMARK = #{remark,jdbcType=VARCHAR}
		where ID = #{id,jdbcType=BIGINT} and VERSION =
		#{version,jdbcType=INTEGER}
	</update>

	<update id="updateDailyCollectStatus" parameterType="java.util.Map">
		update
		<include refid="table" />
		set
		SETT_STATUS = #{status,jdbcType=SMALLINT}
		where BATCH_NO =
		#{batchNo,jdbcType=VARCHAR}
	</update>

	<select id="getById" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from
		<include refid="table" /> as a 
		where a.ID = #{id,jdbcType=BIGINT}
	</select>

	<select id="listBy" parameterType="java.util.Map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from
		<include refid="table" /> as a
		<where>
			<include refid="condition_sql" />
		</where>
	</select>

	<select id="listPage" parameterType="java.util.Map" resultMap="BaseResultMap">
		select a.*, b.USERNO as "USER_NO", b.REALNAME as "REAL_NAME" 
		from TBL_SETT_DAILY_COLLECT as a LEFT JOIN TBL_USER_INFO as b 
		ON a.ACCOUNT_NO = b.ACCOUNTNO
		<where>
			<include refid="condition_sql" />
		</where>
		<![CDATA[ order by ID desc]]>
	</select>
	
	
	<select id="countByPageParam" parameterType="java.util.Map" resultType="hashmap">
		select count(1) as "totalRecord",
		sum(a.TOTAL_AMOUNT) as "totalAmount",
		sum(a.TOTAL_COUNT) as "totalCount"
		from
		<include refid="table" /> as a 
		LEFT JOIN TBL_USER_INFO as b 
		ON a.ACCOUNT_NO = b.ACCOUNTNO 
		<where>
			<include refid="condition_sql" />
		</where>
	</select>
	

	<select id="listPageCount" parameterType="java.util.Map"
		resultType="long">
		select count(1) from 
		<include refid="table" /> as a
		<where>
			<include refid="condition_sql" />
		</where>
	</select>

	<!--where ACCOUNT_NO = #{accountNo} and COLLECT_DATE between #{beginDate} 
		AND CONCAT(#{endDate},' 23:59:59') and SETT_STATUS = 101 -->
	<select id="getSettAmount" parameterType="java.util.Map"
		resultType="double">
		select sum(TOTAL_AMOUNT) from
		<include refid="table" />
		 <![CDATA[where ACCOUNT_NO = #{accountNo} and COLLECT_DATE < CONCAT(#{endCollectDate},' 23:59:59') and SETT_STATUS = 101]]>
	</select>

	
	<delete id="deleteByBatchNoAndDailyType" parameterType="java.util.Map">
		DELETE FROM
		<include refid="table" />
		where BATCH_NO =
		#{batchNo,jdbcType=VARCHAR} and COLLECT_TYPE = #{collectType,jdbcType=SMALLINT}
	</delete>

</mapper>